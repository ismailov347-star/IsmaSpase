'use client'

import { useEffect, useState } from 'react'
import { useRouter } from 'next/navigation'

interface DiagnosticInfo {
  timestamp: string
  telegramAvailable: boolean
  webAppAvailable: boolean
  scriptLoaded: boolean
  platform: string
  version: string
  colorScheme: string
  viewportHeight: number
  viewportStableHeight: number
  isExpanded: boolean
  userAgent: string
  url: string
  initData: string
  user: any
  themeParams: any
  errors: string[]
  networkStatus: string
}

export default function IOSDebugPage() {
  const [diagnostics, setDiagnostics] = useState<DiagnosticInfo | null>(null)
  const [logs, setLogs] = useState<string[]>([])
  const [isOnline, setIsOnline] = useState(true)
  const [isClient, setIsClient] = useState(false)
  const [userAgent, setUserAgent] = useState('N/A')
  const [currentUrl, setCurrentUrl] = useState('N/A')
  const [networkStatus, setNetworkStatus] = useState('N/A')
  const router = useRouter()

  const addLog = (message: string) => {
    const timestamp = new Date().toLocaleTimeString()
    const logMessage = `[${timestamp}] ${message}`
    setLogs(prev => [...prev, logMessage])
    console.log(logMessage)
  }

  useEffect(() => {
    let handleOnline: (() => void) | null = null
    let handleOffline: (() => void) | null = null
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã
    setIsClient(true)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ)
    if (typeof window !== 'undefined' && typeof navigator !== 'undefined') {
      setIsOnline(navigator.onLine)
      setUserAgent(navigator.userAgent)
      setCurrentUrl(window.location.href)
      setNetworkStatus(navigator.onLine ? 'online' : 'offline')
      handleOnline = () => {
        setIsOnline(true)
        setNetworkStatus('online')
        addLog('üåê –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
      }
      handleOffline = () => {
        setIsOnline(false)
        setNetworkStatus('offline')
        addLog('üìµ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ')
      }
      
      window.addEventListener('online', handleOnline)
      window.addEventListener('offline', handleOffline)
      
      addLog('üîç –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É iOS...')
      addLog(`üåê –°—Ç–∞—Ç—É—Å —Å–µ—Ç–∏: ${navigator.onLine ? '–æ–Ω–ª–∞–π–Ω' : '–æ—Ñ–ª–∞–π–Ω'}`)
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É Telegram —Å–∫—Ä–∏–ø—Ç–∞
    const checkTelegramScript = () => {
      const scripts = Array.from(document.scripts)
      const telegramScript = scripts.find(script => 
        script.src.includes('telegram-web-app.js')
      )
      
      if (telegramScript) {
        addLog('‚úÖ Telegram —Å–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ–Ω –≤ DOM')
        addLog(`üìÑ –°–∫—Ä–∏–ø—Ç URL: ${telegramScript.src}`)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
        if (telegramScript.readyState) {
          addLog(`üìä –°—Ç–∞—Ç—É—Å —Å–∫—Ä–∏–ø—Ç–∞: ${telegramScript.readyState}`)
        }
      } else {
        addLog('‚ùå Telegram —Å–∫—Ä–∏–ø—Ç –ù–ï –Ω–∞–π–¥–µ–Ω –≤ DOM')
      }
      
      return !!telegramScript
    }
    
    const runDiagnostics = () => {
      const errors: string[] = []
      
      try {
        addLog('üì± –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Telegram...')
        
        const scriptLoaded = checkTelegramScript()
        const telegramAvailable = !!(window as any)?.Telegram
        const webAppAvailable = !!(window as any)?.Telegram?.WebApp
        
        if (!scriptLoaded) {
          errors.push('Telegram —Å–∫—Ä–∏–ø—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω')
        }
        
        if (!telegramAvailable) {
          errors.push('Telegram –æ–±—ä–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
          addLog('‚ùå Telegram –æ–±—ä–µ–∫—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
        } else {
          addLog('‚úÖ Telegram –æ–±—ä–µ–∫—Ç –¥–æ—Å—Ç—É–ø–µ–Ω')
        }
        
        if (!webAppAvailable) {
          errors.push('Telegram.WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
          addLog('‚ùå Telegram.WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
        } else {
          addLog('‚úÖ Telegram.WebApp –¥–æ—Å—Ç—É–ø–µ–Ω')
        }
        
        const tg = (window as any)?.Telegram?.WebApp
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–µ—Ç–æ–¥–æ–≤
        if (tg) {
          const methods = ['ready', 'expand', 'close', 'disableVerticalSwipes']
          methods.forEach(method => {
            if (typeof tg[method] === 'function') {
              addLog(`‚úÖ –ú–µ—Ç–æ–¥ ${method} –¥–æ—Å—Ç—É–ø–µ–Ω`)
            } else {
              addLog(`‚ùå –ú–µ—Ç–æ–¥ ${method} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`)
              errors.push(`–ú–µ—Ç–æ–¥ ${method} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω`)
            }
          })
        }
        
        const info: DiagnosticInfo = {
          timestamp: new Date().toISOString(),
          telegramAvailable,
          webAppAvailable,
          scriptLoaded,
          platform: tg?.platform || 'unknown',
          version: tg?.version || 'unknown',
          colorScheme: tg?.colorScheme || 'unknown',
          viewportHeight: tg?.viewportHeight || 0,
          viewportStableHeight: tg?.viewportStableHeight || 0,
          isExpanded: tg?.isExpanded || false,
          userAgent: userAgent,
          url: currentUrl,
          initData: tg?.initData || '',
          user: tg?.initDataUnsafe?.user || null,
          themeParams: tg?.themeParams || null,
          networkStatus: networkStatus,
          errors
        }
        
        addLog(`üìä –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${info.platform}`)
        addLog(`üìä –í–µ—Ä—Å–∏—è: ${info.version}`)
        addLog(`üìä –¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞: ${info.colorScheme}`)
        addLog(`üìä –í—ã—Å–æ—Ç–∞ viewport: ${info.viewportHeight}`)
        addLog(`üìä –°—Ç–∞–±–∏–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞: ${info.viewportStableHeight}`)
        addLog(`üìä –†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ: ${info.isExpanded}`)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è iOS –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        if (info.platform === 'ios' || (typeof navigator !== 'undefined' && /iPhone|iPad|iPod/.test(navigator.userAgent))) {
          addLog('üì± –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ iOS —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ')
          if (typeof navigator !== 'undefined') {
            addLog(`üìä iOS –≤–µ—Ä—Å–∏—è –∏–∑ UA: ${navigator.userAgent.match(/OS ([\d_]+)/)?.[1]?.replace(/_/g, '.') || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`)
          }
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º viewport meta
          const viewportMeta = document.querySelector('meta[name="viewport"]')
          if (viewportMeta) {
            addLog(`üìä Viewport meta: ${viewportMeta.getAttribute('content')}`)
          } else {
            addLog('‚ùå Viewport meta –Ω–µ –Ω–∞–π–¥–µ–Ω')
            errors.push('Viewport meta –Ω–µ –Ω–∞–π–¥–µ–Ω')
          }
        }
        
        if (tg && webAppAvailable) {
          try {
            addLog('üöÄ –ü—ã—Ç–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å WebApp...')
            tg.ready()
            addLog('‚úÖ tg.ready() –≤—ã–ø–æ–ª–Ω–µ–Ω')
            
            tg.expand()
            addLog('‚úÖ tg.expand() –≤—ã–ø–æ–ª–Ω–µ–Ω')
            
            if (typeof tg.disableVerticalSwipes === 'function') {
              tg.disableVerticalSwipes()
              addLog('‚úÖ tg.disableVerticalSwipes() –≤—ã–ø–æ–ª–Ω–µ–Ω')
            } else {
              addLog('‚ö†Ô∏è tg.disableVerticalSwipes() –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
            }
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            setTimeout(() => {
              addLog(`üìä –ü–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ - –≤—ã—Å–æ—Ç–∞: ${tg.viewportHeight}, —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ: ${tg.isExpanded}`)
            }, 500)
            
          } catch (error) {
            const errorMsg = `–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: ${error}`
            errors.push(errorMsg)
            addLog(`‚ùå ${errorMsg}`)
          }
        }
        
        setDiagnostics(info)
        addLog('‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
        
      } catch (error) {
        const errorMsg = `–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error}`
        errors.push(errorMsg)
        addLog(`üí• ${errorMsg}`)
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É
    runDiagnostics()
    
    // –ò —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    const intervals = [1000, 2000, 5000]
    intervals.forEach(delay => {
      setTimeout(() => {
        addLog(`üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ ${delay/1000} —Å–µ–∫—É–Ω–¥...`)
        runDiagnostics()
      }, delay)
    })
    
    return () => {
      if (typeof window !== 'undefined' && handleOnline && handleOffline) {
        window.removeEventListener('online', handleOnline)
        window.removeEventListener('offline', handleOffline)
      }
    }
  }, [])

  const handleNavigation = (path: string) => {
    addLog(`üß≠ –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞: ${path}`)
    try {
      router.push(path)
      addLog('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞')
    } catch (error) {
      addLog(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: ${error}`)
    }
  }

  const testNetworkConnection = async () => {
    addLog('üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ç–µ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...')
    try {
      const response = await fetch('/api/health', { 
        method: 'GET',
        cache: 'no-cache'
      })
      if (response.ok) {
        addLog('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç')
      } else {
        addLog(`‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —Å –∫–æ–¥–æ–º: ${response.status}`)
      }
    } catch (error) {
      addLog(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ${error}`)
    }
  }

  return (
    <div className="p-4 text-white min-h-screen">
      <div className="max-w-4xl mx-auto">
        <div className="flex items-center justify-between mb-6">
          <h1 className="text-2xl font-bold">
            üîç iOS Debug Dashboard
          </h1>
          <div className={`px-3 py-1 rounded-full text-sm ${
            isOnline ? 'bg-green-600' : 'bg-red-600'
          }`}>
            {isOnline ? 'üåê –û–Ω–ª–∞–π–Ω' : 'üìµ –û—Ñ–ª–∞–π–Ω'}
          </div>
        </div>
        
        {/* –ö–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <div className="mb-6 flex flex-wrap gap-2">
          <button 
            onClick={() => handleNavigation('/')}
            className="px-4 py-2 bg-blue-600 rounded hover:bg-blue-700 transition-colors"
          >
            üè† –ì–ª–∞–≤–Ω–∞—è
          </button>
          <button 
            onClick={() => handleNavigation('/topics/1')}
            className="px-4 py-2 bg-green-600 rounded hover:bg-green-700 transition-colors"
          >
            üìö –¢–µ–º–∞ 1
          </button>
          <button 
            onClick={() => handleNavigation('/test')}
            className="px-4 py-2 bg-purple-600 rounded hover:bg-purple-700 transition-colors"
          >
            üß™ –¢–µ—Å—Ç
          </button>
          <button 
            onClick={testNetworkConnection}
            className="px-4 py-2 bg-orange-600 rounded hover:bg-orange-700 transition-colors"
          >
            üåê –¢–µ—Å—Ç —Å–µ—Ç–∏
          </button>
        </div>
        
        {/* –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        {diagnostics && (
          <div className="mb-6 p-4 bg-gray-800 rounded-lg">
            <h2 className="text-xl font-semibold mb-4">üìä –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div>
                <strong>–°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω:</strong> {diagnostics.scriptLoaded ? '‚úÖ' : '‚ùå'}
              </div>
              <div>
                <strong>Telegram –¥–æ—Å—Ç—É–ø–µ–Ω:</strong> {diagnostics.telegramAvailable ? '‚úÖ' : '‚ùå'}
              </div>
              <div>
                <strong>WebApp –¥–æ—Å—Ç—É–ø–µ–Ω:</strong> {diagnostics.webAppAvailable ? '‚úÖ' : '‚ùå'}
              </div>
              <div>
                <strong>–°–µ—Ç—å:</strong> {diagnostics.networkStatus === 'online' ? 'üåê' : 'üìµ'} {diagnostics.networkStatus}
              </div>
              <div>
                <strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong> {diagnostics.platform}
              </div>
              <div>
                <strong>–í–µ—Ä—Å–∏—è:</strong> {diagnostics.version}
              </div>
              <div>
                <strong>–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞:</strong> {diagnostics.colorScheme}
              </div>
              <div>
                <strong>–í—ã—Å–æ—Ç–∞ viewport:</strong> {diagnostics.viewportHeight}px
              </div>
              <div>
                <strong>–°—Ç–∞–±–∏–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞:</strong> {diagnostics.viewportStableHeight}px
              </div>
              <div>
                <strong>–†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ:</strong> {diagnostics.isExpanded ? '‚úÖ' : '‚ùå'}
              </div>
            </div>
            
            {diagnostics.user && (
              <div className="mt-4">
                <strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong>
                <pre className="mt-2 p-2 bg-gray-900 rounded text-xs overflow-x-auto">
                  {JSON.stringify(diagnostics.user, null, 2)}
                </pre>
              </div>
            )}
            
            {diagnostics.errors.length > 0 && (
              <div className="mt-4">
                <strong className="text-red-400">–û—à–∏–±–∫–∏ ({diagnostics.errors.length}):</strong>
                <ul className="mt-2 text-red-300">
                  {diagnostics.errors.map((error, index) => (
                    <li key={index}>‚Ä¢ {error}</li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        )}
        
        {/* –õ–æ–≥–∏ */}
        <div className="p-4 bg-gray-900 rounded-lg">
          <h2 className="text-xl font-semibold mb-4">üìù –õ–æ–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ({logs.length})</h2>
          <div className="max-h-96 overflow-y-auto">
            {logs.map((log, index) => (
              <div key={index} className="text-sm font-mono mb-1 text-gray-300">
                {log}
              </div>
            ))}
          </div>
        </div>
        
        {/* –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-6 p-4 bg-gray-800 rounded-lg">
          <h2 className="text-xl font-semibold mb-4">üñ•Ô∏è –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
          <div className="text-sm space-y-2">
            <div><strong>URL:</strong> <span className="break-all">{typeof window !== 'undefined' ? window.location.href : 'N/A'}</span></div>
            <div><strong>User Agent:</strong> <span className="break-all">{typeof navigator !== 'undefined' ? navigator.userAgent : 'N/A'}</span></div>
            <div><strong>–†–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞:</strong> {typeof window !== 'undefined' ? `${window.screen.width}x${window.screen.height}` : 'N/A'}</div>
            <div><strong>–†–∞–∑–º–µ—Ä –æ–∫–Ω–∞:</strong> {typeof window !== 'undefined' ? `${window.innerWidth}x${window.innerHeight}` : 'N/A'}</div>
            <div><strong>Pixel Ratio:</strong> {typeof window !== 'undefined' ? window.devicePixelRatio : 'N/A'}</div>
            <div><strong>–Ø–∑—ã–∫:</strong> {typeof navigator !== 'undefined' ? navigator.language : 'N/A'}</div>
            <div><strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong> {typeof navigator !== 'undefined' ? navigator.platform : 'N/A'}</div>
            <div><strong>Cookies –≤–∫–ª—é—á–µ–Ω—ã:</strong> {typeof navigator !== 'undefined' ? (navigator.cookieEnabled ? '‚úÖ' : '‚ùå') : 'N/A'}</div>
          </div>
        </div>
      </div>
    </div>
  )
}