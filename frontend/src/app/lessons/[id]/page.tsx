'use client'

import { useState, useEffect } from 'react'
import { useParams, useRouter } from 'next/navigation'
import Link from 'next/link'
import { ButtonCta } from '@/components/ui/button-shiny'

interface Lesson {
  id: number
  title: string
  description: string
  video_url: string
  topic_id: number
  topic_title: string
  is_completed: boolean
}

export default function LessonPage() {
  const params = useParams()
  const router = useRouter()
  const [lesson, setLesson] = useState<Lesson | null>(null)
  const [loading, setLoading] = useState(true)
  const [videoLoaded, setVideoLoaded] = useState(false)

  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–æ–≤
  const staticLessons = [
    {
      id: 1,
      title: "–£–ü–ê–ö–û–í–ö–ê –ë–õ–û–ì–ê",
      description: "–∫–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–ª–∏—Å—å –∏ –æ—Å—Ç–∞–≤–∞–ª–∏—Å—å.",
      youtubeUrl: "https://www.youtube.com/embed/XXXX?rel=0",
      topic_id: 1,
      topic_title: "–ü—Ä–∞–∫—Ç–∏–∫—É–º ¬´–°–ò–°–¢–ï–ú–ê –õ–Å–ì–ö–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê¬ª"
    },
    {
      id: 2,
      title: "–°–ò–°–¢–ï–ú–ê –ò–î–ï–ô ¬´–ö–û–ù–¢–ï–ù–¢ –ë–ï–ó –°–¢–£–ü–û–†–ê¬ª",
      description: "–∫–∞–∫ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –Ω–µ –≤—ã–≥–æ—Ä–∞—Ç—å.",
      youtubeUrl: "https://www.youtube.com/embed/YYYY?rel=0",
      topic_id: 1,
      topic_title: "–ü—Ä–∞–∫—Ç–∏–∫—É–º ¬´–°–ò–°–¢–ï–ú–ê –õ–Å–ì–ö–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê¬ª"
    },
    {
      id: 3,
      title: "–¢–ï–ö–°–¢–û–í–´–ï –†–ò–õ–°: –§–û–†–ú–£–õ–ê –ó–ê–•–í–ê–¢–ê –í–ù–ò–ú–ê–ù–ò–Ø",
      description: "—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –ø–æ–¥–∞—á–∞, —á—Ç–æ–±—ã —Ä–æ–ª–∏–∫–∏ –±—Ä–∞–ª–∏ –æ—Ö–≤–∞—Ç—ã.",
      youtubeUrl: "https://www.youtube.com/embed/ZZZZ?rel=0",
      topic_id: 1,
      topic_title: "–ü—Ä–∞–∫—Ç–∏–∫—É–º ¬´–°–ò–°–¢–ï–ú–ê –õ–Å–ì–ö–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê¬ª"
    },
    {
      id: 4,
      title: "–ü–£–ë–õ–ò–ö–ê–¶–ò–ò-–ö–ê–†–£–°–ï–õ–ò ¬´–õ–ò–°–¢–ê–ô, –ù–ï –û–¢–ü–£–°–ö–ê–ô¬ª",
      description: "—Å—Ü–µ–Ω–∞—Ä–∏–∏, —Ä–∏—Ç–º –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—É—Å–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—á–∏—Ç—ã–≤–∞—é—Ç.",
      youtubeUrl: "https://www.youtube.com/embed/WWWW?rel=0",
      topic_id: 1,
      topic_title: "–ü—Ä–∞–∫—Ç–∏–∫—É–º ¬´–°–ò–°–¢–ï–ú–ê –õ–Å–ì–ö–û–ì–û –ö–û–ù–¢–ï–ù–¢–ê¬ª"
    }
  ]

  useEffect(() => {
    if (params.id) {
      fetchLessonData()
    }
  }, [params.id])

  const fetchLessonData = async () => {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ API
      const lessonId = parseInt(params.id as string)
      const staticLesson = staticLessons.find(l => l.id === lessonId)
      
      if (staticLesson) {
        setLesson({
          id: staticLesson.id,
          title: staticLesson.title,
          description: staticLesson.description,
          video_url: staticLesson.youtubeUrl,
          topic_id: staticLesson.topic_id,
          topic_title: staticLesson.topic_title,
          is_completed: false
        })
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—Ä–æ–∫–∞:', error)
    } finally {
      setLoading(false)
    }
  }

  const toggleCompletion = async () => {
    if (!lesson) return
    
    try {
      await fetch(`http://localhost:3001/api/lessons/${lesson.id}/complete`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ completed: !lesson.is_completed }),
      })
      
      setLesson({ ...lesson, is_completed: !lesson.is_completed })
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É—Ä–æ–∫–∞:', error)
    }
  }

  const getYouTubeEmbedUrl = (url: string) => {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –≤–∏–¥–µ–æ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ YouTube URL
    const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/
    const match = url.match(regExp)
    
    if (match && match[2].length === 11) {
      return `https://www.youtube.com/embed/${match[2]}?rel=0&modestbranding=1`
    }
    
    return url // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π URL –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å
  }

  if (loading) {
    return (
      <div className="flex justify-center items-center h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
      </div>
    )
  }

  if (!lesson) {
    return (
      <div className="text-center py-12">
        <h2 className="text-2xl font-bold text-white mb-4">–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω</h2>
        <Link href="/">
          <ButtonCta label="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é" />
        </Link>
      </div>
    )
  }

  return (
    <div className="px-4 py-8 max-w-4xl mx-auto">
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <div className="mb-6">
        <Link href={`/topics/${lesson.topic_id}`}>
          <ButtonCta label="‚Üê –ù–∞–∑–∞–¥" className="mb-4" />
        </Link>
      </div>

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É—Ä–æ–∫–∞ */}
      <div className="mb-6">
        <div className="p-6 rounded-2xl border border-cyan-400/35 shadow-[0_0_12px_rgba(0,180,255,0.18),0_0_28px_rgba(0,180,255,0.08)] hover:shadow-[0_0_14px_rgba(0,180,255,0.24),0_0_34px_rgba(0,180,255,0.12)] hover:-translate-y-0.5 transition-all duration-300" style={{background: 'rgba(20,22,28,0.18)', backdropFilter: 'blur(4px)'}}>
          <h1 className="text-3xl font-bold text-white mb-4">{lesson.title}</h1>
          <p className="text-lg text-white/70 mb-6">{lesson.description}</p>
          
          {/* –°—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è */}
          <div className="flex items-center justify-between">
            <div className="flex items-center">
              <div className={`w-3 h-3 rounded-full mr-3 ${
                lesson.is_completed ? 'bg-green-500' : 'bg-gray-500'
              }`}></div>
              <span className={`font-medium ${
                lesson.is_completed ? 'text-green-400' : 'text-white/50'
              }`}>
                {lesson.is_completed ? '–£—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω' : '–£—Ä–æ–∫ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω'}
              </span>
            </div>
            
            <ButtonCta
              onClick={toggleCompletion}
              label={lesson.is_completed ? '–°–Ω—è—Ç—å –æ—Ç–º–µ—Ç–∫—É' : '–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π'}
            />
          </div>
        </div>
      </div>

      {/* –í–∏–¥–µ–æ */}
      <div className="mb-6">
        <div className="p-6 rounded-2xl border border-cyan-400/35 shadow-[0_0_12px_rgba(0,180,255,0.18),0_0_28px_rgba(0,180,255,0.08)] hover:shadow-[0_0_14px_rgba(0,180,255,0.24),0_0_34px_rgba(0,180,255,0.12)] hover:-translate-y-0.5 transition-all duration-300" style={{background: 'rgba(20,22,28,0.18)', backdropFilter: 'blur(4px)'}}>
          <div className="aspect-video bg-gray-900/50 rounded-lg relative overflow-hidden">
            {!videoLoaded && (
              <div className="absolute inset-0 flex items-center justify-center">
                <div className="text-center">
                  <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-cyan-400 mx-auto mb-4"></div>
                  <p className="text-white/70">–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ...</p>
                </div>
              </div>
            )}
            
            <iframe
              src={lesson.video_url}
              title={lesson.title}
              className="w-full h-full rounded-lg"
              frameBorder="0"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowFullScreen
              onLoad={() => setVideoLoaded(true)}
            ></iframe>
          </div>
        </div>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="mb-6">
        <div className="p-6 rounded-2xl border border-cyan-400/35 shadow-[0_0_12px_rgba(0,180,255,0.18),0_0_28px_rgba(0,180,255,0.08)] hover:shadow-[0_0_14px_rgba(0,180,255,0.24),0_0_34px_rgba(0,180,255,0.12)] hover:-translate-y-0.5 transition-all duration-300" style={{background: 'rgba(20,22,28,0.18)', backdropFilter: 'blur(4px)'}}>
          <h3 className="text-lg font-semibold text-white mb-3">üí° –°–æ–≤–µ—Ç</h3>
          <p className="text-white/70">
            –î–ª—è –ª—É—á—à–µ–≥–æ —É—Å–≤–æ–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º:
          </p>
          <ul className="list-disc list-inside text-white/70 mt-2 space-y-1">
            <li>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é</li>
            <li>–î–µ–ª–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏ –ø–æ —Ö–æ–¥—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</li>
            <li>–ü—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–Ω–∏—è</li>
            <li>–û—Ç–º–µ—Ç–∏—Ç—å —É—Ä–æ–∫ –∫–∞–∫ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π –ø–æ—Å–ª–µ –∏–∑—É—á–µ–Ω–∏—è</li>
          </ul>
        </div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —É—Ä–æ–∫–∞–º–∏ */}
      <div className="flex justify-center">
        <Link href={`/topics/${lesson.topic_id}`}>
          <ButtonCta label="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —É—Ä–æ–∫–æ–≤" icon="‚Üê" />
        </Link>
      </div>
    </div>
  )
}